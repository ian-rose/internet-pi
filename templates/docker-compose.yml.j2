# {{ ansible_managed }}
---
volumes:
  prometheus_data:
  grafana_data:
{% if domain_name_enable and ssl_enable %}
  certs:
  html:
  acme:
  vhost:
{% endif %}

networks:
  front-tier:
    name: internet-monitoring-front-tier
  back-tier:
    name: internet-monitoring-back-tier

services:
{% if domain_name_enable %}
  nginx-proxy:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
{% if ssl_enable %}
      - "443:443"
{% endif %}
    networks:
      - back-tier
      - front-tier
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
{% if ssl_enable %}
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d

  acme-companion:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-proxy-acme
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - vhost:/etc/nginx/vhost.d
    depends_on:
      - nginx-proxy
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      DEFAULT_EMAIL: {{ ssl_default_email }}
      ACME_CHALLENGE: {{ acme_challenge }}
      ACMESH_DNS_API_CONFIG: |-
        DNS_API: {{ dns_api }}
        CF_Token: {{ cf_token }}
        CF_Zone_ID: {{ cf_zone_id }}
    networks:
      - back-tier
    dns:
      - 8.8.8.8
      - 8.8.4.4
{% endif %}
{% endif %}

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time={{ prometheus_tsdb_retention_time }}'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - ping:ping
      - speedtest:speedtest
    networks:
      - back-tier
{% if domain_name_enable and domain_name and domain_prometheus %}
    depends_on:
      - nginx-proxy
    environment:
      - VIRTUAL_HOST={{ domain_prometheus }}.{{ domain_name }}
      - VIRTUAL_PORT=9090
{% if ssl_enable %}
      - LETSENCRYPT_HOST={{ domain_prometheus }}.{{ domain_name }}
{% endif %}
{% endif %}

  grafana:
    image: grafana/grafana:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - 3000:3000
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    depends_on:
      - prometheus
{% if domain_name_enable and domain_name and domain_grafana %}
      - nginx-proxy
    environment:
      - VIRTUAL_HOST={{ domain_grafana }}.{{ domain_name }}
      - VIRTUAL_PORT=3000
{% if ssl_enable %}
      - LETSENCRYPT_HOST={{ domain_grafana }}.{{ domain_name }}
{% endif %}
{% endif %}

{% if log_monitoring_enable %}
  loki:
    image: grafana/loki:2.6.1
    restart: always
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - back-tier
{% if domain_name_enable and domain_name and domain_loki %}
    depends_on:
      - nginx-proxy
    environment:
      - VIRTUAL_HOST={{ domain_loki }}.{{ domain_name }}
      - VIRTUAL_PORT=3100
{% if ssl_enable %}
      - LETSENCRYPT_HOST={{ domain_loki }}.{{ domain_name }}
{% endif %}
{% endif %}

  promtail:
    image: grafana/promtail:2.7.3
    restart: always
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
{% if syslog_monitoring_enable %}
    ports:
      - "514:1514"
{% endif %}
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - back-tier
{% endif %}

  ping:
    image: prom/blackbox-exporter:latest
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./blackbox/config:/config
    expose:
      - 9115
    ports:
      - 9115:9115
    tty: true
    stdin_open: true
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - back-tier
    dns:
      - 8.8.8.8
      - 8.8.4.4

  speedtest:
    image: miguelndecarvalho/speedtest-exporter:latest
    restart: always
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://0.0.0.0:9798/"
      timeout: 10s
    expose:
      - 9798
    ports:
      - 9798:9798
    networks:
      - back-tier
    dns:
      - 8.8.8.8
      - 8.8.4.4

  nodeexp:
    image: prom/node-exporter:latest
    restart: always
    privileged: true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    ports:
      - 9100:9100
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - back-tier
